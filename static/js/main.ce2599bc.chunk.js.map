{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","listVisibility","isReversed","sortBy","start","setState","sortAlphabetically","sortByLength","reverse","reset","this","goodsCopy","sort","g1","g2","localeCompare","length","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUWC,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,gBAAgB,EAChBC,YAAY,EACZC,OAAQ,IALZ,EAQEC,MAAQ,WACN,EAAKC,SAAS,CAAEJ,gBAAgB,KATpC,EAYEK,mBAAqB,WACnB,EAAKD,SAAS,CAAEF,OAAQ,cAb5B,EAgBEI,aAAe,WACb,EAAKF,SAAS,CAAEF,OAAQ,YAjB5B,EAoBEK,QAAU,WACR,EAAKH,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAtBzB,EA0BEO,MAAQ,WACN,EAAKJ,SAAS,CACZH,YAAY,EACZC,OAAQ,MA7Bd,4CAiCE,WACE,MAKIO,KAAKX,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OAEIQ,EAAS,YAAOX,GAmBtB,OAjBAW,EAAUC,MAAK,SAACC,EAAIC,GAClB,OAAQX,GACN,IAAK,WACH,OAAOU,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITd,GACFS,EAAUH,UAIV,sBAAKS,UAAU,MAAf,WACIhB,GACA,wBACEiB,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKN,MAHhB,mBASDH,GACC,gCACE,oBAAIgB,UAAU,QAAd,mBAEA,6BACGN,EAAUS,KAAI,SAAAC,GAAI,OACjB,6BAAgBA,GAAPA,QAIb,wBACEH,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKJ,mBAHhB,iCAQA,wBACEY,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKH,aAHhB,4BAQA,wBACEW,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKF,QAHhB,qBAQA,uBAEA,wBACEU,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKD,MAHhB,6BA3GZ,GAAyBa,IAAMC,WAyHhBzB,IC7If0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ce2599bc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  listVisibility: boolean;\n  isReversed: boolean;\n  sortBy: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    listVisibility: false,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  start = () => {\n    this.setState({ listVisibility: true });\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: 'alphabet' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const {\n      goods,\n      listVisibility,\n      isReversed,\n      sortBy,\n    } = this.state;\n    const goodsCopy = [...goods];\n\n    goodsCopy.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return g1.localeCompare(g2);\n\n        case 'length':\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goodsCopy.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {!listVisibility && (\n          <button\n            type=\"button\"\n            className=\"button is-link\"\n            onClick={this.start}\n          >\n            Start\n          </button>\n        )}\n\n        {listVisibility && (\n          <div>\n            <h1 className=\"title\">Goods</h1>\n\n            <ul>\n              {goodsCopy.map(good => (\n                <li key={good}>{good}</li>\n              ))}\n            </ul>\n\n            <button\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <br />\n\n            <button\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}